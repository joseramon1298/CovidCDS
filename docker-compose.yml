version: "3.2"

services:
  api_gateway:
    build:
      context: src/api_gateway
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "8000:8000"  

  api_service:
    build:
      context: src/api_service
      dockerfile: Dockerfile
    depends_on:
      - mysql
    ports:
      - "8080:8000"
    command: sh -c "sleep 20 && python api_service.py && while true; do sleep 300; done"
    restart: always

  kafka_producer:
    build:
      context: src/kafka_producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "4000:4000"
    restart: "on-failure"
    command: >
      sh -c "sleep 5 && python kafka_producer.py"

  kafka_consumer:
    build:
      context: src/kafka_consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    restart: "on-failure"
    command: >
      sh -c "sleep 5 && python kafka_consumer.py"

  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password --ignore-db-dir=lost+found --explicit_defaults_for_timestamp --bind-address=0.0.0.0
    restart: always
    environment:
      MYSQL_DATABASE: covid
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - ./covid.sql:/docker-entrypoint-initdb.d/covid.sql
        
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_PRODUCER_LINGER_MS: 30000
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 5



  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    ports:
      - "80:80"
    volumes:
      - ./ui:/var/www/html
    command: ["apachectl", "-D", "FOREGROUND"]

  angularui:
    image: imagenangular
    ports:
      - "4500:4500"

  angularjs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4600:4600"
